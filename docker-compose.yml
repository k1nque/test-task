services:
  db:
    image: postgis/postgis:15-3.3
    container_name: organizations_db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: organizations_db
    ports:
      - "5434:5432"  # Внешний порт 5434 -> внутренний порт 5432
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  api:
    build: .
    container_name: organizations_api
    environment:
      POSTGRES_SERVER: db
      POSTGRES_PORT: 5432  # Внутри Docker сети используется стандартный порт
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: organizations_db
      API_KEY: your-secret-api-key-change-in-production
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - .:/app
    command: >
      sh -c "
        echo 'Waiting for database...' &&
        sleep 5 &&
        echo 'Running migrations...' &&
        alembic upgrade head &&
        echo 'Seeding database...' &&
        python scripts/seed_data.py || true &&
        echo 'Starting API server...' &&
        uvicorn main:app --host 0.0.0.0 --port 8000 --reload
      "

volumes:
  postgres_data:
